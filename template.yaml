AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Creacion de Cloudwatch Dasboard Default y alarmas as'
Globals:
  Function:
    Timeout: 30
Resources:
  CloudWatchDashboardDefault:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - Ref: CloudwatchDasboardDefaultPolicy
    Metadata:
      SamResourceId: CloudWatchDashboardDefault
  CloudwatchDasboardDefaultPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Politica para funciones CloudWatchDefault y PutMetrics. 
      ManagedPolicyName: CloudwatchDasboardDefaultPolicy
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - ec2:DescribeInstances
          - ec2:DescribeImages
          - cloudwatch:PutMetricData
          - cloudwatch:PutMetricAlarm
          - ec2:DescribeVolumes
          - cloudwatch:ListMetrics
          - rds:DescribeDBInstances
          Resource: '*'
        - Effect: Allow
          Action:
          - cloudwatch:PutMetricStream
          - cloudwatch:PutMetricAlarm
          - cloudwatch:PutDashboard
          - logs:CreateLogStream
          - sns:Publish
          - logs:CreateLogGroup
          - logs:PutLogEvents
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:aws:cloudwatch::'
              - Ref: AWS::AccountId
              - :dashboard/*
          - Fn::Join:
            - ''
            - - 'arn:aws:cloudwatch:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :metric-stream/*
          - Fn::Join:
            - ''
            - - 'arn:aws:cloudwatch:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :alarm/*
          - Fn::Join:
            - ''
            - - 'arn:aws:logs:*:'
              - Ref: AWS::AccountId
              - :log-group
          - Fn::Join:
            - ''
            - - 'arn:aws:sns:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :CorreoSoporte
          - Fn::Join:
            - ''
            - - 'arn:aws:logs:*:'
              - Ref: AWS::AccountId
              - :log-group:*:log-stream:*
    Metadata:
      SamResourceId: CloudwatchDasboardDefaultPolicy
  SNSTopicEmail:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: CorreoSoporte
      Subscription:
      - Endpoint: soporte@apser.es
        Protocol: email
    Metadata:
      SamResourceId: SNSTopicEmail

  CloudwatchDefaultFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: CloudwatchDefault/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      
  PutMetricsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PutMetricsFunction/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64

Outputs:
  CloudwatchDefaultFunction:
    Description: Funcion que genera el dashboard
    Value:
      Fn::GetAtt:
      - CloudwatchDefaultFunction
      - Arn
  PutMetricsFunction:
    Description: Funcion que genera las alarmas
    Value:
      Fn::GetAtt:
      - PutMetricsFunction
      - Arn
